{"ast":null,"code":"import { auth, firestore } from 'firebase';\nimport { authConstanst } from './constants';\nimport { getRealtimeUsers } from './user.actions';\nexport const signup = user => {\n  return async dispatch => {\n    const db = firestore();\n    dispatch({\n      type: `${authConstanst.USER_LOGIN}_REQUEST`\n    });\n    auth().createUserWithEmailAndPassword(user.email, user.password).then(data => {\n      console.log(data);\n      const currentUser = auth().currentUser;\n      const name = `${user.firstName} ${user.lastName}`;\n      currentUser.updateProfile({\n        displayName: name\n      }).then(() => {\n        //if you are here means it is updated successfully\n        db.collection('users').doc(data.user.uid).set({\n          firstName: user.firstName,\n          lastName: user.lastName,\n          uid: data.user.uid,\n          createdAt: new Date(),\n          isOnline: true\n        }).then(() => {\n          //The user is succefully loggedin\n          const loggedInUser = {\n            firstName: user.firstName,\n            lastName: user.lastName,\n            uid: data.user.uid,\n            email: user.email\n          };\n          localStorage.setItem('user', JSON.stringify(loggedInUser));\n          console.log('User logged in successfully...!');\n          dispatch({\n            type: `${authConstanst.USER_LOGIN}_SUCCESS`,\n            payload: {\n              user: loggedInUser\n            }\n          });\n        }) // orelse it will capture an error message \n        .catch(error => {\n          console.log(error);\n          dispatch({\n            type: `${authConstanst.USER_LOGIN}_FAILURE`,\n            payload: {\n              error\n            }\n          });\n        });\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};\nexport const signin = user => {\n  return async dispatch => {\n    dispatch({\n      type: `${authConstanst.USER_LOGIN}_REQUEST`\n    });\n    auth().signInWithEmailAndPassword(user.email, user.password).then(data => {\n      console.log(data);\n      const db = firestore();\n      db.collection('users').doc(data.user.uid).update({\n        isOnline: true\n      }).then(() => {\n        const name = data.user.displayName.split(\" \");\n        const firstName = name[0];\n        const lastName = name[1];\n        const loggedInUser = {\n          firstName,\n          lastName,\n          uid: data.user.uid,\n          email: data.user.email\n        };\n        localStorage.setItem('user', JSON.stringify(loggedInUser));\n        dispatch({\n          type: `${authConstanst.USER_LOGIN}_SUCCESS`,\n          payload: {\n            user: loggedInUser\n          }\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }).catch(error => {\n      console.log(error);\n      dispatch({\n        type: `${authConstanst.USER_LOGIN}_FAILURE`,\n        payload: {\n          error\n        }\n      });\n    });\n  };\n};\nexport const isLoggedInUser = () => {\n  return async dispatch => {\n    const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\n\n    if (user) {\n      dispatch({\n        type: `${authConstanst.USER_LOGIN}_SUCCESS`,\n        payload: {\n          user\n        }\n      });\n    } else {\n      dispatch({\n        type: `${authConstanst.USER_LOGIN}_FAILURE`,\n        payload: {\n          error: 'Login again please'\n        }\n      });\n    }\n  };\n};\nexport const logout = uid => {\n  return async dispatch => {\n    dispatch({\n      type: `${authConstanst.USER_LOGOUT}_REQUEST`\n    }); //Now lets logout user\n\n    const db = firestore();\n    db.collection('users').doc(uid).update({\n      isOnline: false\n    }).then(() => {\n      auth().signOut().then(() => {\n        //successfully\n        localStorage.clear();\n        dispatch({\n          type: `${authConstanst.USER_LOGOUT}_SUCCESS`\n        });\n      }).catch(error => {\n        console.log(error);\n        dispatch({\n          type: `${authConstanst.USER_LOGOUT}_FAILURE`,\n          payload: {\n            error\n          }\n        });\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/nisht/Downloads/reactjs-firestore-messenger-master/reactjs-firestore-messenger-master/src/actions/auth.actions.js"],"names":["auth","firestore","authConstanst","getRealtimeUsers","signup","user","dispatch","db","type","USER_LOGIN","createUserWithEmailAndPassword","email","password","then","data","console","log","currentUser","name","firstName","lastName","updateProfile","displayName","collection","doc","uid","set","createdAt","Date","isOnline","loggedInUser","localStorage","setItem","JSON","stringify","payload","catch","error","signin","signInWithEmailAndPassword","update","split","isLoggedInUser","getItem","parse","logout","USER_LOGOUT","signOut","clear"],"mappings":"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","sourcesContent":["import { auth, firestore } from 'firebase';\nimport { authConstanst } from './constants';\nimport { getRealtimeUsers } from './user.actions';\nexport const signup = (user) => {\n\n    return async (dispatch) => {\n\n        const db = firestore();\n\n        dispatch({type: `${authConstanst.USER_LOGIN}_REQUEST`});\n\n        auth()\n        .createUserWithEmailAndPassword(user.email, user.password)\n        .then(data => {\n            console.log(data);\n            const currentUser = auth().currentUser;\n            const name = `${user.firstName} ${user.lastName}`;\n            currentUser.updateProfile({\n                displayName: name\n            })\n            .then(() => {\n                //if you are here means it is updated successfully\n                db.collection('users')\n                .doc(data.user.uid)\n                .set({\n                    firstName: user.firstName,\n                    lastName: user.lastName,\n                    uid: data.user.uid,\n                    createdAt: new Date(),\n                    isOnline: true\n                })\n                .then(() => {\n                    //The user is succefully loggedin\n                    const loggedInUser = {\n                        firstName: user.firstName,\n                        lastName: user.lastName,\n                        uid: data.user.uid,\n                        email: user.email\n                    }\n                    localStorage.setItem('user', JSON.stringify(loggedInUser));\n                    console.log('User logged in successfully...!');\n                    dispatch({\n                        type: `${authConstanst.USER_LOGIN}_SUCCESS`,\n                        payload: { user: loggedInUser }\n                    })\n                })// orelse it will capture an error message \n                .catch(error => {\n                    console.log(error);\n                    dispatch({ \n                        type: `${authConstanst.USER_LOGIN}_FAILURE`,\n                        payload: { error }\n                      });\n                });\n            });\n        })\n        .catch(error => {\n            console.log(error);\n        })\n\n\n    }\n\n\n}\n\nexport const signin = (user) => {\n    return async dispatch => {\n\n        dispatch({ type: `${authConstanst.USER_LOGIN}_REQUEST` });\n        auth()\n        .signInWithEmailAndPassword(user.email, user.password)\n        .then((data) => {\n            console.log(data);\n\n\n            const db = firestore();\n            db.collection('users')\n            .doc(data.user.uid)\n            .update({\n                isOnline: true\n            })\n            .then(() => {\n                const name = data.user.displayName.split(\" \");\n                const firstName = name[0];\n                const lastName = name[1];\n\n                const loggedInUser = {\n                    firstName,\n                    lastName,\n                    uid: data.user.uid,\n                    email: data.user.email\n                }\n\n                localStorage.setItem('user', JSON.stringify(loggedInUser));\n\n                dispatch({\n                    type: `${authConstanst.USER_LOGIN}_SUCCESS`,\n                    payload: { user: loggedInUser }\n                });\n            })\n            .catch(error => {\n                console.log(error)\n            })\n\n            \n\n\n\n        })\n        .catch(error => {\n            console.log(error);\n            dispatch({\n                type: `${authConstanst.USER_LOGIN}_FAILURE`,\n                payload: { error }\n            })\n        })\n        \n\n\n    }\n}\n\nexport const isLoggedInUser = () => {\n    return async dispatch => {\n\n        const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\n\n        if(user){\n            dispatch({\n                type: `${authConstanst.USER_LOGIN}_SUCCESS`,\n                payload: { user }\n            });\n        }else{\n            dispatch({\n                type: `${authConstanst.USER_LOGIN}_FAILURE`,\n                payload: { error: 'Login again please' }\n            });\n        }\n\n\n    }\n}\n\nexport const logout = (uid) => {\n    return async dispatch => {\n        dispatch({ type: `${authConstanst.USER_LOGOUT}_REQUEST` });\n        //Now lets logout user\n\n        const db = firestore();\n        db.collection('users')\n        .doc(uid)\n        .update({\n            isOnline: false\n        })\n        .then(() => {\n\n            auth()\n            .signOut()\n            .then(() => {\n                //successfully\n                localStorage.clear();\n                dispatch({type: `${authConstanst.USER_LOGOUT}_SUCCESS`});\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch({ type: `${authConstanst.USER_LOGOUT}_FAILURE`, payload: { error } })\n            })\n\n        })\n        .catch(error => {\n            console.log(error);\n        })\n\n        \n\n\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}